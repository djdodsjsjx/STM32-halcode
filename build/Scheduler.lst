ARM GAS  C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"Scheduler.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Loop_500Hz,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	Loop_500Hz:
  24              	.LFB69:
  25              		.file 1 "Core/Src/Scheduler.c"
   1:Core/Src/Scheduler.c **** #include "Scheduler.h"
   2:Core/Src/Scheduler.c **** #include "tim.h"
   3:Core/Src/Scheduler.c **** #include "filter.h"
   4:Core/Src/Scheduler.c **** #include "show.h"
   5:Core/Src/Scheduler.c **** uint32_t test_dT_1000hz[3],test_rT[6];
   6:Core/Src/Scheduler.c **** 
   7:Core/Src/Scheduler.c **** static void Loop_1000Hz(void)	//1ms执行一次
   8:Core/Src/Scheduler.c **** {
   9:Core/Src/Scheduler.c **** 	test_dT_1000hz[0] = test_dT_1000hz[1];
  10:Core/Src/Scheduler.c **** 	test_rT[3] = test_dT_1000hz[1] = GetSysTime_us ();
  11:Core/Src/Scheduler.c **** 	test_dT_1000hz[2] = (uint32_t)(test_dT_1000hz[1] - test_dT_1000hz[0]);
  12:Core/Src/Scheduler.c **** //////////////////////////////////////////////////////////////////////	
  13:Core/Src/Scheduler.c **** 
  14:Core/Src/Scheduler.c **** 	
  15:Core/Src/Scheduler.c **** 
  16:Core/Src/Scheduler.c **** //////////////////////////////////////////////////////////////////////	
  17:Core/Src/Scheduler.c **** 	test_rT[4]= GetSysTime_us ();
  18:Core/Src/Scheduler.c **** 	test_rT[5] = (uint32_t)(test_rT[4] - test_rT[3]) ;	
  19:Core/Src/Scheduler.c **** }
  20:Core/Src/Scheduler.c **** 
  21:Core/Src/Scheduler.c **** static void Loop_500Hz(void)	//2ms执行一次
  22:Core/Src/Scheduler.c **** {	
  26              		.loc 1 22 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  23:Core/Src/Scheduler.c **** //	lanya(USART1_com_data); 
  24:Core/Src/Scheduler.c **** 
  25:Core/Src/Scheduler.c **** 	// DOG_CONTROL();    //6ms+1.9ms姿态控制
  26:Core/Src/Scheduler.c **** }
  31              		.loc 1 26 1 view .LVU1
  32 0000 7047     		bx	lr
ARM GAS  C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s 			page 2


  33              		.cfi_endproc
  34              	.LFE69:
  36              		.section	.text.Loop_50Hz,"ax",%progbits
  37              		.align	1
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu softvfp
  43              	Loop_50Hz:
  44              	.LFB72:
  27:Core/Src/Scheduler.c **** 
  28:Core/Src/Scheduler.c **** static void Loop_200Hz(void)	//5ms执行一次
  29:Core/Src/Scheduler.c **** {
  30:Core/Src/Scheduler.c **** 	
  31:Core/Src/Scheduler.c **** //	 AHRS_Get_Angle();         //mpu9250
  32:Core/Src/Scheduler.c **** 
  33:Core/Src/Scheduler.c **** 	Filter_Get_Angle();   //4.7ms
  34:Core/Src/Scheduler.c **** 
  35:Core/Src/Scheduler.c **** 	// LED_demo();
  36:Core/Src/Scheduler.c **** }
  37:Core/Src/Scheduler.c **** 
  38:Core/Src/Scheduler.c **** static void Loop_100Hz(void)	//10ms执行一次
  39:Core/Src/Scheduler.c **** {
  40:Core/Src/Scheduler.c **** 			test_rT[0]= GetSysTime_us ();
  41:Core/Src/Scheduler.c **** //////////////////////////////////////////////////////////////////////	
  42:Core/Src/Scheduler.c **** 	
  43:Core/Src/Scheduler.c **** 	
  44:Core/Src/Scheduler.c **** //////////////////////////////////////////////////////////////////////		
  45:Core/Src/Scheduler.c **** 			test_rT[1]= GetSysTime_us ();
  46:Core/Src/Scheduler.c **** 			test_rT[2] = (uint32_t)(test_rT[1] - test_rT[0]) ;	
  47:Core/Src/Scheduler.c **** //				printf("%d \n",test_rT[2]);
  48:Core/Src/Scheduler.c **** }
  49:Core/Src/Scheduler.c **** 
  50:Core/Src/Scheduler.c **** static void Loop_50Hz(void)	//20ms执行一次
  51:Core/Src/Scheduler.c **** {	
  45              		.loc 1 51 1 view -0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  52:Core/Src/Scheduler.c **** 	
  53:Core/Src/Scheduler.c **** }
  50              		.loc 1 53 1 view .LVU3
  51 0000 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE72:
  55              		.section	.text.Loop_20Hz,"ax",%progbits
  56              		.align	1
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	Loop_20Hz:
  63              	.LFB73:
  54:Core/Src/Scheduler.c **** 
  55:Core/Src/Scheduler.c **** static void Loop_20Hz(void)	//50ms执行一次
  56:Core/Src/Scheduler.c **** {
ARM GAS  C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s 			page 3


  64              		.loc 1 56 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  57:Core/Src/Scheduler.c **** 	
  58:Core/Src/Scheduler.c **** //	printf(" opmv.lt.sta:%d ,opmv.lt.angle:%d,pmv.lt.deviation:%d ,opmv.lt.p_flag:%d ,opmv.lt.pos_x:
  59:Core/Src/Scheduler.c **** 
  60:Core/Src/Scheduler.c **** }
  69              		.loc 1 60 1 view .LVU5
  70 0000 7047     		bx	lr
  71              		.cfi_endproc
  72              	.LFE73:
  74              		.section	.text.Loop_10Hz,"ax",%progbits
  75              		.align	1
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  79              		.fpu softvfp
  81              	Loop_10Hz:
  82              	.LFB74:
  61:Core/Src/Scheduler.c **** 
  62:Core/Src/Scheduler.c **** static void Loop_10Hz(void)	//100ms执行一次
  63:Core/Src/Scheduler.c **** {
  83              		.loc 1 63 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  64:Core/Src/Scheduler.c **** 
  65:Core/Src/Scheduler.c **** 	
  66:Core/Src/Scheduler.c **** }
  88              		.loc 1 66 1 view .LVU7
  89 0000 7047     		bx	lr
  90              		.cfi_endproc
  91              	.LFE74:
  93              		.section	.text.Loop_2Hz,"ax",%progbits
  94              		.align	1
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu softvfp
 100              	Loop_2Hz:
 101              	.LFB75:
  67:Core/Src/Scheduler.c **** 
  68:Core/Src/Scheduler.c **** static void Loop_2Hz(void)	//500ms执行一次
  69:Core/Src/Scheduler.c **** {
 102              		.loc 1 69 1 view -0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106 0000 08B5     		push	{r3, lr}
 107              	.LCFI0:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 3, -8
 110              		.cfi_offset 14, -4
  70:Core/Src/Scheduler.c **** 	oled_show();   //40ms一个周期
ARM GAS  C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s 			page 4


 111              		.loc 1 70 2 view .LVU9
 112 0002 FFF7FEFF 		bl	oled_show
 113              	.LVL0:
  71:Core/Src/Scheduler.c **** //	//========   调试   =======
  72:Core/Src/Scheduler.c **** //	 demo();
  73:Core/Src/Scheduler.c **** 	// printf("fdsf\n");
  74:Core/Src/Scheduler.c **** }
 114              		.loc 1 74 1 is_stmt 0 view .LVU10
 115 0006 08BD     		pop	{r3, pc}
 116              		.cfi_endproc
 117              	.LFE75:
 119              		.section	.text.Loop_100Hz,"ax",%progbits
 120              		.align	1
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu softvfp
 126              	Loop_100Hz:
 127              	.LFB71:
  39:Core/Src/Scheduler.c **** 			test_rT[0]= GetSysTime_us ();
 128              		.loc 1 39 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132 0000 10B5     		push	{r4, lr}
 133              	.LCFI1:
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 4, -8
 136              		.cfi_offset 14, -4
  40:Core/Src/Scheduler.c **** //////////////////////////////////////////////////////////////////////	
 137              		.loc 1 40 4 view .LVU12
  40:Core/Src/Scheduler.c **** //////////////////////////////////////////////////////////////////////	
 138              		.loc 1 40 16 is_stmt 0 view .LVU13
 139 0002 FFF7FEFF 		bl	GetSysTime_us
 140              	.LVL1:
  40:Core/Src/Scheduler.c **** //////////////////////////////////////////////////////////////////////	
 141              		.loc 1 40 14 view .LVU14
 142 0006 044C     		ldr	r4, .L9
 143 0008 2060     		str	r0, [r4]
  45:Core/Src/Scheduler.c **** 			test_rT[2] = (uint32_t)(test_rT[1] - test_rT[0]) ;	
 144              		.loc 1 45 4 is_stmt 1 view .LVU15
  45:Core/Src/Scheduler.c **** 			test_rT[2] = (uint32_t)(test_rT[1] - test_rT[0]) ;	
 145              		.loc 1 45 16 is_stmt 0 view .LVU16
 146 000a FFF7FEFF 		bl	GetSysTime_us
 147              	.LVL2:
  45:Core/Src/Scheduler.c **** 			test_rT[2] = (uint32_t)(test_rT[1] - test_rT[0]) ;	
 148              		.loc 1 45 14 view .LVU17
 149 000e 6060     		str	r0, [r4, #4]
  46:Core/Src/Scheduler.c **** //				printf("%d \n",test_rT[2]);
 150              		.loc 1 46 4 is_stmt 1 view .LVU18
  46:Core/Src/Scheduler.c **** //				printf("%d \n",test_rT[2]);
 151              		.loc 1 46 48 is_stmt 0 view .LVU19
 152 0010 2368     		ldr	r3, [r4]
  46:Core/Src/Scheduler.c **** //				printf("%d \n",test_rT[2]);
 153              		.loc 1 46 39 view .LVU20
 154 0012 C01A     		subs	r0, r0, r3
  46:Core/Src/Scheduler.c **** //				printf("%d \n",test_rT[2]);
ARM GAS  C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s 			page 5


 155              		.loc 1 46 15 view .LVU21
 156 0014 A060     		str	r0, [r4, #8]
  48:Core/Src/Scheduler.c **** 
 157              		.loc 1 48 1 view .LVU22
 158 0016 10BD     		pop	{r4, pc}
 159              	.L10:
 160              		.align	2
 161              	.L9:
 162 0018 00000000 		.word	.LANCHOR0
 163              		.cfi_endproc
 164              	.LFE71:
 166              		.section	.text.Loop_1000Hz,"ax",%progbits
 167              		.align	1
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu softvfp
 173              	Loop_1000Hz:
 174              	.LFB68:
   8:Core/Src/Scheduler.c **** 	test_dT_1000hz[0] = test_dT_1000hz[1];
 175              		.loc 1 8 1 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179 0000 38B5     		push	{r3, r4, r5, lr}
 180              	.LCFI2:
 181              		.cfi_def_cfa_offset 16
 182              		.cfi_offset 3, -16
 183              		.cfi_offset 4, -12
 184              		.cfi_offset 5, -8
 185              		.cfi_offset 14, -4
   9:Core/Src/Scheduler.c **** 	test_rT[3] = test_dT_1000hz[1] = GetSysTime_us ();
 186              		.loc 1 9 2 view .LVU24
   9:Core/Src/Scheduler.c **** 	test_rT[3] = test_dT_1000hz[1] = GetSysTime_us ();
 187              		.loc 1 9 36 is_stmt 0 view .LVU25
 188 0002 094C     		ldr	r4, .L13
 189 0004 6368     		ldr	r3, [r4, #4]
   9:Core/Src/Scheduler.c **** 	test_rT[3] = test_dT_1000hz[1] = GetSysTime_us ();
 190              		.loc 1 9 20 view .LVU26
 191 0006 2360     		str	r3, [r4]
  10:Core/Src/Scheduler.c **** 	test_dT_1000hz[2] = (uint32_t)(test_dT_1000hz[1] - test_dT_1000hz[0]);
 192              		.loc 1 10 2 is_stmt 1 view .LVU27
  10:Core/Src/Scheduler.c **** 	test_dT_1000hz[2] = (uint32_t)(test_dT_1000hz[1] - test_dT_1000hz[0]);
 193              		.loc 1 10 35 is_stmt 0 view .LVU28
 194 0008 FFF7FEFF 		bl	GetSysTime_us
 195              	.LVL3:
  10:Core/Src/Scheduler.c **** 	test_dT_1000hz[2] = (uint32_t)(test_dT_1000hz[1] - test_dT_1000hz[0]);
 196              		.loc 1 10 33 view .LVU29
 197 000c 6060     		str	r0, [r4, #4]
  10:Core/Src/Scheduler.c **** 	test_dT_1000hz[2] = (uint32_t)(test_dT_1000hz[1] - test_dT_1000hz[0]);
 198              		.loc 1 10 13 view .LVU30
 199 000e 074D     		ldr	r5, .L13+4
 200 0010 E860     		str	r0, [r5, #12]
  11:Core/Src/Scheduler.c **** //////////////////////////////////////////////////////////////////////	
 201              		.loc 1 11 2 is_stmt 1 view .LVU31
  11:Core/Src/Scheduler.c **** //////////////////////////////////////////////////////////////////////	
 202              		.loc 1 11 67 is_stmt 0 view .LVU32
ARM GAS  C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s 			page 6


 203 0012 2368     		ldr	r3, [r4]
  11:Core/Src/Scheduler.c **** //////////////////////////////////////////////////////////////////////	
 204              		.loc 1 11 51 view .LVU33
 205 0014 C01A     		subs	r0, r0, r3
  11:Core/Src/Scheduler.c **** //////////////////////////////////////////////////////////////////////	
 206              		.loc 1 11 20 view .LVU34
 207 0016 A060     		str	r0, [r4, #8]
  17:Core/Src/Scheduler.c **** 	test_rT[5] = (uint32_t)(test_rT[4] - test_rT[3]) ;	
 208              		.loc 1 17 2 is_stmt 1 view .LVU35
  17:Core/Src/Scheduler.c **** 	test_rT[5] = (uint32_t)(test_rT[4] - test_rT[3]) ;	
 209              		.loc 1 17 14 is_stmt 0 view .LVU36
 210 0018 FFF7FEFF 		bl	GetSysTime_us
 211              	.LVL4:
  17:Core/Src/Scheduler.c **** 	test_rT[5] = (uint32_t)(test_rT[4] - test_rT[3]) ;	
 212              		.loc 1 17 12 view .LVU37
 213 001c 2861     		str	r0, [r5, #16]
  18:Core/Src/Scheduler.c **** }
 214              		.loc 1 18 2 is_stmt 1 view .LVU38
  18:Core/Src/Scheduler.c **** }
 215              		.loc 1 18 46 is_stmt 0 view .LVU39
 216 001e EB68     		ldr	r3, [r5, #12]
  18:Core/Src/Scheduler.c **** }
 217              		.loc 1 18 37 view .LVU40
 218 0020 C01A     		subs	r0, r0, r3
  18:Core/Src/Scheduler.c **** }
 219              		.loc 1 18 13 view .LVU41
 220 0022 6861     		str	r0, [r5, #20]
  19:Core/Src/Scheduler.c **** 
 221              		.loc 1 19 1 view .LVU42
 222 0024 38BD     		pop	{r3, r4, r5, pc}
 223              	.L14:
 224 0026 00BF     		.align	2
 225              	.L13:
 226 0028 00000000 		.word	.LANCHOR1
 227 002c 00000000 		.word	.LANCHOR0
 228              		.cfi_endproc
 229              	.LFE68:
 231              		.section	.text.Loop_200Hz,"ax",%progbits
 232              		.align	1
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 236              		.fpu softvfp
 238              	Loop_200Hz:
 239              	.LFB70:
  29:Core/Src/Scheduler.c **** 	
 240              		.loc 1 29 1 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 08B5     		push	{r3, lr}
 245              	.LCFI3:
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 3, -8
 248              		.cfi_offset 14, -4
  33:Core/Src/Scheduler.c **** 
 249              		.loc 1 33 2 view .LVU44
ARM GAS  C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s 			page 7


 250 0002 FFF7FEFF 		bl	Filter_Get_Angle
 251              	.LVL5:
  36:Core/Src/Scheduler.c **** 
 252              		.loc 1 36 1 is_stmt 0 view .LVU45
 253 0006 08BD     		pop	{r3, pc}
 254              		.cfi_endproc
 255              	.LFE70:
 257              		.section	.text.Scheduler_Setup,"ax",%progbits
 258              		.align	1
 259              		.global	Scheduler_Setup
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu softvfp
 265              	Scheduler_Setup:
 266              	.LFB76:
  75:Core/Src/Scheduler.c **** 
  76:Core/Src/Scheduler.c **** //系统任务配置，创建不同执行频率的“线程”
  77:Core/Src/Scheduler.c **** static sched_task_t sched_tasks[] = 
  78:Core/Src/Scheduler.c **** {
  79:Core/Src/Scheduler.c **** 	{Loop_1000Hz,1000,  0, 0},
  80:Core/Src/Scheduler.c **** 	{Loop_500Hz , 500,  0, 0},
  81:Core/Src/Scheduler.c **** 	{Loop_200Hz , 200,  0, 0},
  82:Core/Src/Scheduler.c **** 	{Loop_100Hz , 100,  0, 0},
  83:Core/Src/Scheduler.c **** 	{Loop_50Hz  ,  50,  0, 0},
  84:Core/Src/Scheduler.c **** 	{Loop_20Hz  ,  20,  0, 0},
  85:Core/Src/Scheduler.c **** 	{Loop_10Hz  ,  10,  0, 0},
  86:Core/Src/Scheduler.c **** 	{Loop_2Hz   ,   2,  0, 0},
  87:Core/Src/Scheduler.c **** };
  88:Core/Src/Scheduler.c **** //根据数组长度，判断线程数量
  89:Core/Src/Scheduler.c **** #define TASK_NUM (sizeof(sched_tasks)/sizeof(sched_task_t))
  90:Core/Src/Scheduler.c **** 
  91:Core/Src/Scheduler.c **** void Scheduler_Setup(void)
  92:Core/Src/Scheduler.c **** {
 267              		.loc 1 92 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
  93:Core/Src/Scheduler.c **** 	uint8_t index = 0;
 272              		.loc 1 93 2 view .LVU47
 273              	.LVL6:
  94:Core/Src/Scheduler.c **** 	//初始化任务表
  95:Core/Src/Scheduler.c **** 	for(index=0;index < TASK_NUM;index++)
 274              		.loc 1 95 2 view .LVU48
 275              		.loc 1 95 11 is_stmt 0 view .LVU49
 276 0000 0023     		movs	r3, #0
 277              		.loc 1 95 2 view .LVU50
 278 0002 01E0     		b	.L18
 279              	.LVL7:
 280              	.L19:
 281              		.loc 1 95 31 is_stmt 1 discriminator 2 view .LVU51
 282              		.loc 1 95 36 is_stmt 0 discriminator 2 view .LVU52
 283 0004 0133     		adds	r3, r3, #1
 284              	.LVL8:
 285              		.loc 1 95 36 discriminator 2 view .LVU53
 286 0006 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s 			page 8


 287              	.LVL9:
 288              	.L18:
 289              		.loc 1 95 14 is_stmt 1 discriminator 1 view .LVU54
 290              		.loc 1 95 2 is_stmt 0 discriminator 1 view .LVU55
 291 0008 072B     		cmp	r3, #7
 292 000a 14D8     		bhi	.L21
  96:Core/Src/Scheduler.c **** 	{
  97:Core/Src/Scheduler.c **** 		//计算每个任务的延时周期数
  98:Core/Src/Scheduler.c **** 		sched_tasks[index].interval_ticks = 1000U/sched_tasks[index].rate_hz;
 293              		.loc 1 98 3 is_stmt 1 view .LVU56
 294              		.loc 1 98 63 is_stmt 0 view .LVU57
 295 000c 03EB4301 		add	r1, r3, r3, lsl #1
 296 0010 8A00     		lsls	r2, r1, #2
 297 0012 0949     		ldr	r1, .L22
 298 0014 1144     		add	r1, r1, r2
 299 0016 8888     		ldrh	r0, [r1, #4]
 300              		.loc 1 98 37 view .LVU58
 301 0018 4FF47A72 		mov	r2, #1000
 302 001c B2FBF0F2 		udiv	r2, r2, r0
 303 0020 CA80     		strh	r2, [r1, #6]	@ movhi
  99:Core/Src/Scheduler.c **** 		//最短周期为1，也就是1ms
 100:Core/Src/Scheduler.c **** 		if(sched_tasks[index].interval_ticks < 1)
 304              		.loc 1 100 3 is_stmt 1 view .LVU59
 305              		.loc 1 100 5 is_stmt 0 view .LVU60
 306 0022 002A     		cmp	r2, #0
 307 0024 EED1     		bne	.L19
 101:Core/Src/Scheduler.c **** 		{
 102:Core/Src/Scheduler.c **** 			sched_tasks[index].interval_ticks = 1;
 308              		.loc 1 102 4 is_stmt 1 view .LVU61
 309              		.loc 1 102 38 is_stmt 0 view .LVU62
 310 0026 03EB4302 		add	r2, r3, r3, lsl #1
 311 002a 9100     		lsls	r1, r2, #2
 312 002c 024A     		ldr	r2, .L22
 313 002e 0A44     		add	r2, r2, r1
 314 0030 0121     		movs	r1, #1
 315 0032 D180     		strh	r1, [r2, #6]	@ movhi
 316 0034 E6E7     		b	.L19
 317              	.L21:
 103:Core/Src/Scheduler.c **** 		}
 104:Core/Src/Scheduler.c **** 	}
 105:Core/Src/Scheduler.c **** }
 318              		.loc 1 105 1 view .LVU63
 319 0036 7047     		bx	lr
 320              	.L23:
 321              		.align	2
 322              	.L22:
 323 0038 00000000 		.word	.LANCHOR2
 324              		.cfi_endproc
 325              	.LFE76:
 327              		.section	.text.Scheduler_Run,"ax",%progbits
 328              		.align	1
 329              		.global	Scheduler_Run
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu softvfp
 335              	Scheduler_Run:
ARM GAS  C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s 			page 9


 336              	.LFB77:
 106:Core/Src/Scheduler.c **** //这个函数放到main函数的while(1)中，不停判断是否有线程应该执行
 107:Core/Src/Scheduler.c **** void Scheduler_Run(void)
 108:Core/Src/Scheduler.c **** {
 337              		.loc 1 108 1 is_stmt 1 view -0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341 0000 10B5     		push	{r4, lr}
 342              	.LCFI4:
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 4, -8
 345              		.cfi_offset 14, -4
 109:Core/Src/Scheduler.c **** 	uint8_t index = 0;
 346              		.loc 1 109 2 view .LVU65
 347              	.LVL10:
 110:Core/Src/Scheduler.c **** 	//循环判断所有线程，是否应该执行
 111:Core/Src/Scheduler.c **** 	
 112:Core/Src/Scheduler.c **** 	for(index=0;index < TASK_NUM;index++)
 348              		.loc 1 112 2 view .LVU66
 349              		.loc 1 112 11 is_stmt 0 view .LVU67
 350 0002 0024     		movs	r4, #0
 351              		.loc 1 112 2 view .LVU68
 352 0004 01E0     		b	.L25
 353              	.LVL11:
 354              	.L26:
 355              		.loc 1 112 31 is_stmt 1 discriminator 2 view .LVU69
 356              		.loc 1 112 36 is_stmt 0 discriminator 2 view .LVU70
 357 0006 0134     		adds	r4, r4, #1
 358              	.LVL12:
 359              		.loc 1 112 36 discriminator 2 view .LVU71
 360 0008 E4B2     		uxtb	r4, r4
 361              	.LVL13:
 362              	.L25:
 363              		.loc 1 112 14 is_stmt 1 discriminator 1 view .LVU72
 364              		.loc 1 112 2 is_stmt 0 discriminator 1 view .LVU73
 365 000a 072C     		cmp	r4, #7
 366 000c 17D8     		bhi	.L29
 367              	.LBB2:
 113:Core/Src/Scheduler.c **** 	{
 114:Core/Src/Scheduler.c **** 		//获取系统当前时间，单位MS
 115:Core/Src/Scheduler.c **** 		uint32_t tnow = HAL_GetTick();
 368              		.loc 1 115 3 is_stmt 1 view .LVU74
 369              		.loc 1 115 19 is_stmt 0 view .LVU75
 370 000e FFF7FEFF 		bl	HAL_GetTick
 371              	.LVL14:
 116:Core/Src/Scheduler.c **** 		//进行判断，如果当前时间减去上一次执行的时间，大于等于该线程的执行周期，则执行线程
 117:Core/Src/Scheduler.c **** 		if(tnow - sched_tasks[index].last_run >= sched_tasks[index].interval_ticks)
 372              		.loc 1 117 3 is_stmt 1 view .LVU76
 373              		.loc 1 117 31 is_stmt 0 view .LVU77
 374 0012 04EB4403 		add	r3, r4, r4, lsl #1
 375 0016 0A4A     		ldr	r2, .L30
 376 0018 02EB8303 		add	r3, r2, r3, lsl #2
 377 001c 9A68     		ldr	r2, [r3, #8]
 378              		.loc 1 117 11 view .LVU78
 379 001e 821A     		subs	r2, r0, r2
 380              		.loc 1 117 62 view .LVU79
ARM GAS  C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s 			page 10


 381 0020 DB88     		ldrh	r3, [r3, #6]
 382              		.loc 1 117 5 view .LVU80
 383 0022 9A42     		cmp	r2, r3
 384 0024 EFD3     		bcc	.L26
 118:Core/Src/Scheduler.c **** 		{			
 119:Core/Src/Scheduler.c **** 				//更新线程的执行时间，用于下一次判断
 120:Core/Src/Scheduler.c **** 			sched_tasks[index].last_run = tnow;
 385              		.loc 1 120 4 is_stmt 1 view .LVU81
 386              		.loc 1 120 32 is_stmt 0 view .LVU82
 387 0026 064A     		ldr	r2, .L30
 388 0028 04EB4403 		add	r3, r4, r4, lsl #1
 389 002c 02EB8303 		add	r3, r2, r3, lsl #2
 390 0030 9860     		str	r0, [r3, #8]
 121:Core/Src/Scheduler.c **** 			//执行线程函数，使用的是函数指针
 122:Core/Src/Scheduler.c **** 			sched_tasks[index].task_func();
 391              		.loc 1 122 4 is_stmt 1 view .LVU83
 392              		.loc 1 122 22 is_stmt 0 view .LVU84
 393 0032 04EB4403 		add	r3, r4, r4, lsl #1
 394 0036 52F82330 		ldr	r3, [r2, r3, lsl #2]
 395              		.loc 1 122 4 view .LVU85
 396 003a 9847     		blx	r3
 397              	.LVL15:
 398              		.loc 1 122 4 view .LVU86
 399 003c E3E7     		b	.L26
 400              	.L29:
 401              		.loc 1 122 4 view .LVU87
 402              	.LBE2:
 123:Core/Src/Scheduler.c **** 			 			
 124:Core/Src/Scheduler.c **** 		}
 125:Core/Src/Scheduler.c **** 			
 126:Core/Src/Scheduler.c **** 	}
 127:Core/Src/Scheduler.c **** }
 403              		.loc 1 127 1 view .LVU88
 404 003e 10BD     		pop	{r4, pc}
 405              	.LVL16:
 406              	.L31:
 407              		.loc 1 127 1 view .LVU89
 408              		.align	2
 409              	.L30:
 410 0040 00000000 		.word	.LANCHOR2
 411              		.cfi_endproc
 412              	.LFE77:
 414              		.global	test_rT
 415              		.global	test_dT_1000hz
 416              		.section	.bss.test_dT_1000hz,"aw",%nobits
 417              		.align	2
 418              		.set	.LANCHOR1,. + 0
 421              	test_dT_1000hz:
 422 0000 00000000 		.space	12
 422      00000000 
 422      00000000 
 423              		.section	.bss.test_rT,"aw",%nobits
 424              		.align	2
 425              		.set	.LANCHOR0,. + 0
 428              	test_rT:
 429 0000 00000000 		.space	24
 429      00000000 
ARM GAS  C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s 			page 11


 429      00000000 
 429      00000000 
 429      00000000 
 430              		.section	.data.sched_tasks,"aw"
 431              		.align	2
 432              		.set	.LANCHOR2,. + 0
 435              	sched_tasks:
 436 0000 00000000 		.word	Loop_1000Hz
 437 0004 E803     		.short	1000
 438 0006 0000     		.short	0
 439 0008 00000000 		.word	0
 440 000c 00000000 		.word	Loop_500Hz
 441 0010 F401     		.short	500
 442 0012 0000     		.short	0
 443 0014 00000000 		.word	0
 444 0018 00000000 		.word	Loop_200Hz
 445 001c C800     		.short	200
 446 001e 0000     		.short	0
 447 0020 00000000 		.word	0
 448 0024 00000000 		.word	Loop_100Hz
 449 0028 6400     		.short	100
 450 002a 0000     		.short	0
 451 002c 00000000 		.word	0
 452 0030 00000000 		.word	Loop_50Hz
 453 0034 3200     		.short	50
 454 0036 0000     		.short	0
 455 0038 00000000 		.word	0
 456 003c 00000000 		.word	Loop_20Hz
 457 0040 1400     		.short	20
 458 0042 0000     		.short	0
 459 0044 00000000 		.word	0
 460 0048 00000000 		.word	Loop_10Hz
 461 004c 0A00     		.short	10
 462 004e 0000     		.short	0
 463 0050 00000000 		.word	0
 464 0054 00000000 		.word	Loop_2Hz
 465 0058 0200     		.short	2
 466 005a 0000     		.short	0
 467 005c 00000000 		.word	0
 468              		.text
 469              	.Letext0:
 470              		.file 2 "e:\\clion\\gcc-arm-none-eabi\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default
 471              		.file 3 "e:\\clion\\gcc-arm-none-eabi\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 472              		.file 4 "Core/Inc/Scheduler.h"
 473              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 474              		.file 6 "Core/Inc/show.h"
 475              		.file 7 "Core/Inc/tim.h"
 476              		.file 8 "Core/Inc/filter.h"
ARM GAS  C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 Scheduler.c
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:16     .text.Loop_500Hz:00000000 $t
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:23     .text.Loop_500Hz:00000000 Loop_500Hz
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:37     .text.Loop_50Hz:00000000 $t
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:43     .text.Loop_50Hz:00000000 Loop_50Hz
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:56     .text.Loop_20Hz:00000000 $t
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:62     .text.Loop_20Hz:00000000 Loop_20Hz
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:75     .text.Loop_10Hz:00000000 $t
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:81     .text.Loop_10Hz:00000000 Loop_10Hz
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:94     .text.Loop_2Hz:00000000 $t
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:100    .text.Loop_2Hz:00000000 Loop_2Hz
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:120    .text.Loop_100Hz:00000000 $t
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:126    .text.Loop_100Hz:00000000 Loop_100Hz
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:162    .text.Loop_100Hz:00000018 $d
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:167    .text.Loop_1000Hz:00000000 $t
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:173    .text.Loop_1000Hz:00000000 Loop_1000Hz
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:226    .text.Loop_1000Hz:00000028 $d
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:232    .text.Loop_200Hz:00000000 $t
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:238    .text.Loop_200Hz:00000000 Loop_200Hz
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:258    .text.Scheduler_Setup:00000000 $t
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:265    .text.Scheduler_Setup:00000000 Scheduler_Setup
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:323    .text.Scheduler_Setup:00000038 $d
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:328    .text.Scheduler_Run:00000000 $t
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:335    .text.Scheduler_Run:00000000 Scheduler_Run
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:410    .text.Scheduler_Run:00000040 $d
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:428    .bss.test_rT:00000000 test_rT
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:421    .bss.test_dT_1000hz:00000000 test_dT_1000hz
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:417    .bss.test_dT_1000hz:00000000 $d
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:424    .bss.test_rT:00000000 $d
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:431    .data.sched_tasks:00000000 $d
C:\Users\Mr.Zhu\AppData\Local\Temp\ccmnxAMY.s:435    .data.sched_tasks:00000000 sched_tasks

UNDEFINED SYMBOLS
oled_show
GetSysTime_us
Filter_Get_Angle
HAL_GetTick
